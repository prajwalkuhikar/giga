# Add debugging statements to print tensor shapes
            print(f"images_crop shape: {images_crop.shape}")
            print(f"renders shape: {renders.shape}")

            # Resize renders to match the dimensions of images_crop
            if images_crop.shape[2:] != renders.shape[2:]:
                renders = F.interpolate(renders, size=images_crop.shape[2:], mode='bilinear', align_corners=False)
                print(f"Resized renders shape: {renders.shape}")




# Add debugging statements to print tensor shapes
                print(f"images_crop shape: {iter_outputs.images_crop.shape}")
                print(f"renders shape: {iter_outputs.renders.shape}")

                # Resize renders to match the dimensions of images_crop
                if iter_outputs.images_crop.shape[2:] != iter_outputs.renders.shape[2:]:
                    iter_outputs.renders = F.interpolate(
                        iter_outputs.renders, size=iter_outputs.images_crop.shape[2:], mode='bilinear', align_corners=False
                    )
                    print(f"Resized renders shape: {iter_outputs.renders.shape}")
